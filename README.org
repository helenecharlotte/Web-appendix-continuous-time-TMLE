# Web-appendix-continuous-time-TMLE
* Welcome

This is the web-appendix of our manuscript entitled 
/Continuous-time targeted minimum loss-based estimation of estimation of intervention-specific mean outcomes./

=[[provide link to arXiv]]=

This repository provides the R-codes behind our empirical studies for
proof-of-concept so that anonymous users can reproduce the results.

Note that we here do not (yet) provide user-friendly code which
implements our method in a computational efficient way ... but we are
currently working hard on achieving exactly this. Stay tuned! 

The current implementation requires a large memory for simulations of
many time points. 

Below we describe the simulation scenario in terms of the actual
R-code. 

* Running the code

The following code uses one computing core to calculate the estimates
of cTMLE and LTMLE using a single simulated dataset. The code that
produces the empirical results of Table 1 and Table 2 of the
manuscript are shown l√¶nger down.

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory 
source("./examples/load.R")
K5.ctmle <- runTMLE(no_cores=1,K=5,misspecify.init = FALSE,M = 1,n = 1000,seed=23,progress.bar=-1)
K5.ctmle
#+END_SRC

#+RESULTS[<2020-11-10 17:35:52> 72e3fe61d47e5f294c5476822f49ee1cc8210b04]:
:     ctmle.A1      se.A1  ctmle.A0      se.A0
: 1: 0.4241032 0.02574778 0.5305897 0.03168532

#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
# NOTE: you need to set the working directory 
source("./examples/load.R")
K5.ltmle <- runLTMLE(no_cores=1,K=5,misspecify.init = FALSE,M = 1,n = 1000,seed=23,progress.bar=-1)
K5.ltmle
#+END_SRC

#+RESULTS[<2020-11-10 17:36:09> f43f9656ddcdd88083218be5cebf6ea917011a36]:
:     ltmle.A0      sd.A0  ltmle.A1      sd.A1
: 1: 0.5252997 0.03648988 0.4207659 0.02741637

* Making of tables 1 and 2

** Table 1

We provide code that produces results for =K=5= and =K=30= for LTMLE
and our new method, cTMLE. The code in files [[examples/table1.R]] and
[[examples/table2.R]] generate the following results:

#+BEGIN_SRC R  :results output raw drawer  :exports both  :session *R* :cache yes  
#+END_SRC

*** K=5
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R")
table1.K5.true <- readRDS(file="./examples/table1-K5-true.rds")
table1.K5.ltmle <- readRDS(file="./examples/table1-K5-ltmle.rds")
table1.K5.ctmle <- readRDS(file="./examples/table1-K5-ctmle.rds")
summary(object=table1.K5.ltmle,true=table1.K5.true)
summary(object=table1.K5.ctmle,true=table1.K5.true)
#+END_SRC

#+RESULTS[<2020-11-11 06:32:54> 621d2f6ce3f64930d757439ba12b3da16f669af6]:
#+begin_example
     LTMLE           A0           A1           psi
1     true 0.5594940000 0.4246560000 -0.1348380000
2     mean 0.5604047413 0.4249743984 -0.1354303429
3     bias 0.0009107413 0.0003183984 -0.0005923429
4       se 0.0382404918 0.0297962413  0.0484783582
5 coverage 0.9740000000 0.9510000000  0.9450000000
6      MSE 0.0340420306 0.0287382528  0.0429705222
     cTMLE           A0           A1           psi
1     true 0.5594940000 0.4246560000 -0.1348380000
2     mean 0.5604410633 0.4250188667 -0.1354221967
3     bias 0.0009470633 0.0003628667 -0.0005841967
4       se 0.0301985731 0.0249113172  0.0391475100
5 coverage 0.9410000000 0.9230000000  0.9170000000
6      MSE 0.0315648151 0.0272826269  0.0401914348
#+end_example

*** K=30
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
source("./examples/load.R")
table1.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table1.K30.ltmle <- readRDS(file="./examples/table1-K30-ltmle.rds")
table1.K30.ctmle <- readRDS(file="./examples/table1-K30-ctmle.rds")
summary(object=table1.K30.ltmle,true=table1.K30.true)
summary(object=table1.K30.ctmle,true=table1.K30.true)
#+END_SRC

#+RESULTS[<2020-11-11 06:33:50> b51efb857731c0084cf8075585da81ecc82af510]:
#+begin_example
     LTMLE          A0         A1          psi
1     true 0.611914000 0.47326200 -0.138652000
2     mean 0.615976477 0.48202223 -0.133954247
3     bias 0.004062477 0.00876023  0.004697753
4       se 0.081083036 0.06811621  0.105897483
5 coverage 0.976000000 0.96700000  0.954000000
6      MSE 0.063713770 0.06047120  0.087028633
     cTMLE           A0            A1           psi
1     true  0.611914000  0.4732620000 -0.1386520000
2     mean  0.610204423  0.4724102447 -0.1377941783
3     bias -0.001709577 -0.0008517553  0.0008578217
4       se  0.043655625  0.0367673552  0.0570758440
5 coverage  0.937000000  0.9470000000  0.9220000000
6      MSE  0.044959470  0.0372479742  0.0580228584
#+end_example

** Table 2

*** K=30 (misspecified initial estimator)
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
source("./examples/load.R")
table2.K30.true <- readRDS(file="./examples/table1-K30-true.rds")
table2.K30.misspecified <- readRDS(file="./examples/table2-K30-ctmle.rds")
summary(object=table2.K30.misspecified,true=table2.K30.true)
#+END_SRC

#+RESULTS[<2020-11-11 06:36:42> ea82779657abf9a862e8686c263c1d4fd0ca6cfa]:
:      cTMLE          A0            A1          psi
: 1     true  0.61191400  0.4732620000 -0.138652000
: 2     mean  0.60904218  0.4728682985 -0.136173881
: 3     bias -0.00287182 -0.0003937015  0.002478119
: 4       se  0.04369185  0.0368757742  0.057173425
: 5 coverage  0.93900000  0.9410000000  0.924000000
: 6      MSE  0.04519084  0.0375446679  0.058236868

* Changing the simulation scenario

The current simulation setting is best described with the following
R-code:

#+BEGIN_SRC R  :results output raw drawer  :exports code  :session *R* :cache yes  
# Step 1: baseline covariate 
L0 <- sample(1:6, n, replace=1000)/6
# Step 2: baseline treatment
form.A0 <- function(L0){
  cbind(-0.1+0.25*L0)
}
# Step 3: covariate monitoring process: time for current measurement 
#         depends on previous measurements (X.prev)
form.dN.L <- function(L0, dN.L.prev, L.prev, A.prev){
  -0.2-0.05*K-0.025*(K>7)-0.25*dN.L.prev-0.15*L0-0.1*(A.prev==1)+0.3*L.prev
}
# Step 4: treatment monitoring process: time for current measurement 
#         depends on time of last measurement (X.prev)
form.dN.A <- function(L0, dN.A.prev, L.prev, A.prev, no.jumps.A, L.star){
  -0.75-0.05*K-0.42*dN.A.prev+0.15*L0+0.3*(A.prev==2)+0.4*(A.prev==1)-0.25*L.prev
}
form.C <- function(L0, L.prev, A.prev, A0){
  -3.95+(K>40)*5-0.4*K^{2/3}-0.24*(K>2 & K<=4)-0.4*(K>4 & K<=9)
  -(K>9)*0.4*K^{1/5}+0.2*(K>25)*K^{1/4}
  +0.1*L0+0.2*(A0==1)+0.9*(A0==2)+2.15*L.prev
}
form.L <- function(L0, L.prev, A.prev, A0){
  0.5-0.4*A0+0.15*L0-0.25*(A.prev==1)+0.4*L.prev
}
form.A <- function(L0, L.prev, A.prev, A0){
  cbind(-1+(1-A0)*0.6+(1-A.prev)*0.4+L.prev*0.6-0.15*(K>15)*L.prev)
}
form.Y <- function(L0, L.prev, A.prev, A0, no.jumps.A, dN.A.prev) {
  -1.1-0.33*K/3*(K>2 & K<=4)-0.25*K^{2/3}-0.25*(K>4 & K<=9)-
    (K>25 & K<45)*0.3*K^{1/5}-
      (K>75)*0.31+(K>85)*0.2-
      (K>25 & K<75)*0.5*K^{1/5}+0.6*(K>25)*K^{1/4}-0.25*A.prev+
      0.4*L.prev-0.25*A0+0.35*L.prev*A0+(K>75)*0.1*A0+(K>85)*0.01*A0
}
#+END_SRC

*  Dependencies 

** R-version

The code has been tested with the following R version

#+BEGIN_SRC R  :results output :exports results  :session *R* :cache yes  
version
#+END_SRC

#+RESULTS[<2020-11-09 18:12:47> 143b9cabc93679f20607ffef9eeb3eadefba88c3]:
#+begin_example
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          0.2                         
year           2020                        
month          06                          
day            22                          
svn rev        78730                       
language       R                           
version.string R version 4.0.2 (2020-06-22)
nickname       Taking Off Again
#+end_example

and the following package versions:

#+BEGIN_SRC R  :results output raw drawer  :exports results  :session *R* :cache yes  
pp <- c("data.table", "zoo", "stringr", "ltmle", "parallel", "foreach", "doParallel")
Publish::org(data.table(Package=pp,Version=sapply(pp,function(x) as.character(packageVersion(x)))))
#+END_SRC

#+RESULTS[<2020-11-09 18:13:13> ec9009aff7db8031012c07b48c3be553f0446e14]:
:results:
| Package    | Version |
|------------+---------|
| data.table |  1.13.0 |
| zoo        |   1.8.8 |
| stringr    |   1.4.0 |
| ltmle      |   1.2.0 |
| parallel   |   4.0.2 |
| foreach    |   1.5.0 |
| doParallel |  1.0.15 |
:end:

